# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureCLI@2
  displayName: 'terraform init with azurerm backend'
  inputs:
    azureSubscription: 'azure_visual_studio_subscription'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Ensure infrastructure for terraform backend"
      az storage account create \
        --name saterraform413\
        --resource-group rg-terrafom-pipelines\
        --kind StorageV2 \
        --sku Standard_LRS \
        --https-only true \
        --allow-blob-public-access false
      az storage container create \
        --name az300demo \
        --account-name saterraform413 \
        --auth login
      sasToken=az storage container generate-sas \
        --account-name saterraform413 \
        --name az300demo \
        --permissions acdlrw \
        --expiry `date -u -d "10 minutes" '+%Y-%m-%dT%H:%MZ'` \
        --auth-mode login \
        --as-user \
        -o tsv
      terraform init \
        -backend-config="storage_account_name=saterraform413" \
        -backend-config="container_name=az300demo" \
        -backend-config="key=test.tfstate" \
        -backend-config="sas_token=$sasToken"

- task: AzureCLI@2
  displayName: "terraform apply"
  inputs:
    azureSubscription: 'azure_visual_studio_subscription'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      terraform apply --auto-approve